enum StatusValues {
  NEEDS_ACTION
  COMPLETED
  IN_PROCESS
  CANCELLED
}

type Subjects @model @auth(rules: [{allow: private}, {allow: owner}]) {
  id: ID!
  subject_Name: String
  current_Grade: Float
  target_Grade: Float
  Tasks: [Task] @hasMany(indexName: "bySubjects", fields: ["id"])
  Schedules: [Schedule] @hasMany(indexName: "bySubjects", fields: ["id"])
  userinfoID: ID! @index(name: "byUserinfo")
}

type TaskGradeInfo @model @auth(rules: [{allow: private}, {allow: owner}]) {
  id: ID!
  current_Grade: Float
  task_Weightage: Float
  overall_Percentage: Float
  extra_Info: String
  time_Taken: AWSTime
  Task: Task @belongsTo
}

type ScheduleGradeInfo @model @auth(rules: [{allow: private}, {allow: owner}]) {
  id: ID!
  current_Grade: Float
  task_Weightage: Float
  overall_Percentage: Float
  extra_Info: String
  attended: Boolean
  Schedule: Schedule @belongsTo
}

type SubscribedCalendar @model @auth(rules: [{allow: private}, {allow: owner}, {allow: public}]) {
  id: ID!
  Calendar_Name: String
  Calendar_URL: AWSURL
  userinfoID: ID! @index(name: "byUserinfo")
  Schedules: [Schedule] @hasMany(indexName: "bySubscribedCalendar", fields: ["id"])
  Tasks: [Task] @hasMany(indexName: "bySubscribedCalendar", fields: ["id"])
  LAST_MODIFIED: String
}

enum Frequencytype {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

type Repeatdata {
  FREQ: Frequencytype!
  INTERVALS: Int!
  UNTIL: AWSDateTime
  WKST: String
  BYDAYS: String
  BYMONTH: String
  COUNT: Int
}

type Userinfo @model @auth(rules: [{allow: owner}, {allow: groups, groups: ["Admins"], operations: [create, read, update, delete]}, {allow: public}]) {
  id: ID!
  name: String!
  email: AWSEmail!
  Timezone: String
  Schedules: [SubscribedCalendar] @hasMany(indexName: "byUserinfo", fields: ["id"])
  Tasks: [SubscribedCalendar] @hasMany(indexName: "byUserinfo", fields: ["id"])
  SubscribedCalendars: [SubscribedCalendar] @hasMany(indexName: "byUserinfo", fields: ["id"])
  Subjects: [Subjects] @hasMany(indexName: "byUserinfo", fields: ["id"])
}

type Schedule @model @auth(rules: [{allow: owner}, {allow: groups, groups: ["Admins"], operations: [create, read, update, delete]}, {allow: public}]) {
  id: ID!
  SUMMARY: String!
  DTSTART: AWSDateTime!
  DTEND: AWSDateTime!
  DESCRIPTION: String
  LOCATION: String
  userinfoID: ID! @index(name: "byUserinfo")
  RRULE: Repeatdata
  UID: String
  DTSTAMP: AWSDateTime
  subscribedcalendarID: ID @index(name: "bySubscribedCalendar")
  subjectsID: ID @index(name: "bySubjects")
  ScheduleGradeInfo: ScheduleGradeInfo @hasOne
}

type Task @model @auth(rules: [{allow: owner}, {allow: groups, groups: ["Admins"], operations: [create, read, update, delete]}, {allow: public}]) {
  id: ID!
  UID: String
  DTSTART: AWSDateTime
  DUE: AWSDateTime!
  SUMMARY: String
  userinfoID: ID! @index(name: "byUserinfo")
  COMPLETED: AWSDateTime
  STATUS: StatusValues
  PRIORITY: Int
  DTSTAMP: AWSDateTime
  subscribedcalendarID: ID @index(name: "bySubscribedCalendar")
  DESCRIPTION: String
  subjectsID: ID @index(name: "bySubjects")
  TaskGradeInfo: TaskGradeInfo @hasOne
  LOCATION: String
}
 