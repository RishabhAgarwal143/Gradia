type Importance @model @auth(rules: [{allow: private}]) {
  id: ID!
  Grade_Percentage: String
  Task_info: String
  Expected_Time: String
  Course: String
  Additional_Info: AWSJSON
}

type SubscribedCalendar @model @auth(rules: [{allow: private}, {allow: owner}, {allow: public}]) {
  id: ID!
  Calendar_Name: String
  Calendar_URL: AWSURL
  userinfoID: ID! @index(name: "byUserinfo")
}

enum Frequencytype {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}

type Repeatdata {
  FREQ: Frequencytype!
  INTERVALS: Int!
  UNTIL: AWSDateTime
  WKST: String
  BYDAYS: String
  BYMONTH: String
  COUNT: Int
}

type Userinfo @model @auth(rules: [{allow: owner}, {allow: groups, groups: ["Admins"], operations: [create, read, update, delete]}, {allow: public}]) {
  id: ID!
  name: String!
  email: AWSEmail!
  Timezone: String
  Schedules: [SubscribedCalendar] @hasMany(indexName: "byUserinfo", fields: ["id"])
  Tasks: [SubscribedCalendar] @hasMany(indexName: "byUserinfo", fields: ["id"])
  SubscribedCalendars: [SubscribedCalendar] @hasMany(indexName: "byUserinfo", fields: ["id"])
}

type Schedule @model @auth(rules: [{allow: owner}, {allow: groups, groups: ["Admins"], operations: [create, read, update, delete]}, {allow: public}]) {
  id: ID!
  SUMMARY: String!
  DTSTART: AWSDateTime!
  DTEND: AWSDateTime!
  DESCRIPTION: String
  LOCATION: String
  userinfoID: ID! @index(name: "byUserinfo")
  RRULE: Repeatdata
  UID: String
  CATEGORIES: String
  DTSTAMP: AWSDateTime
  Importance: Importance @hasOne
}

type Task @model @auth(rules: [{allow: owner}, {allow: groups, groups: ["Admins"], operations: [create, read, update, delete]}, {allow: public}]) {
  id: ID!
  UID: String
  DTSTART: AWSDateTime
  DUE: AWSDateTime!
  SUMMARY: String
  userinfoID: ID! @index(name: "byUserinfo")
  COMPLETED: String
  STATUS: String
  CATEGORIES: String
  PRIORITY: Int
  DTSTAMP: AWSDateTime
  Importance: Importance @hasOne
}
 